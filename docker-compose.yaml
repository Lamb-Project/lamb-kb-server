services:
  backend:
    build:
      context: ./backend
      args:
        - REQUIREMENTS_FILE=requirements-cpu.txt
    ports:
      - "9090:9090"
    env_file:
      - backend/.env
    environment:
      - FIRECRAWL_API_KEY=${FIRECRAWL_API_KEY}
      - FIRECRAWL_API_URL=${FIRECRAWL_API_URL}
      - PERPLEXITY_API_KEY=${PERPLEXITY_API_KEY}
    volumes:
      # Mounts the backend source code for live-reloading during development.
      - ./backend:/app/backend
      # Mounts the static files directory.
      - ./static:/app/static
      # Use a named volume for the database, mounted to the non-root user's home directory.
      # This is the most reliable way to handle data persistence and permissions in distroless containers.
      - kb-data:/home/nonroot/data
    networks:
      - app-network
    depends_on:
      - ollama

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "8501:8501"
    environment:
      - API_BASE_URL=http://backend:9090
      - API_TOKEN=0p3n-w3bu!
    depends_on:
      - backend
    networks:
      - app-network

  ollama:
    build:
      context: ./ollama
      args:
        OLLAMA_EMBEDDING_MODEL: ${EMBEDDINGS_MODEL}
    ports:
      - "11434:11434"
    environment:
      - OLLAMA_ORIGINS=*
    volumes:
      - ollama-data:/root/.ollama
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

# Defines the named volumes used by the services.
# Docker manages the permissions for these volumes, ensuring the container can write to them.
volumes:
  kb-data:
    name: lamb-kb-data
  static-files:
    name: lamb-static-files
  ollama-data:
    name: lamb-ollama-data
